#*
 Copyright 2010-2014 Norconex Inc.
 
 This file is part of Norconex Filesystem Collector.
 
 Norconex Filesystem Collector is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 Norconex Filesystem Collector is distributed in the hope that it will be useful, 
 but WITHOUT ANY WARRANTY; without even the implied warranty of 
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with Norconex Filesystem Collector. If not, see <http://www.gnu.org/licenses/>.
*#
#set($h1 = '#')
#set($h2 = '##')
#set($h3 = '###')
#set($h4 = '####')
<head><title>Usage</title><meta name="Author" content="Norconex Inc." /></head> 


$h2 Command line

    usage: collector-fs[.bat|.sh]
     -a,--action $arg      Required: one of start|resume|stop
     -c,--config $arg      Required: Filesystem Collector configuration file.
     -v,--variables $arg   Optional: variable file.

The above Filesystem Collector startup script is found in the root directory of 
your installation (where you extracted the Zip file).  Refer to the 
[Configuration](./configuration.html) page for documentation on all 
configuration options.   Refer to 
[ConfigurationLoader](http://www.norconex.com/product/commons-lang/apidocs/com/norconex/commons/lang/config/ConfigurationLoader.html)
Javadoc for details on the optional variables file.


$h2 Java Integration

If you are using Maven, simply add the 
[project dependency](./download.html#source) to your `pom.xml`.
If you are not using Maven, you can add all JAR files in your installation 
"lib" folder to your application classpath.  Configure the 
[FilesystemCollector](./apidocs/com/norconex/collector/fs/FilesystemCollector.html) 
class, by passing it a 
[FilesystemCollectorConfig](./apidocs/com/norconex/collector/fs/FilesystemCollectorConfig.html).
You can build the configuration using java, or by loading an XML configuration 
file using the 
[FilesystemCollectorConfigLoader](./apidocs/com/norconex/collector/fs/FilesystemCollectorConfigLoader.html)
class. Below is a sample code usage:

    /* XML configuration: */
    //HttpCollectorConfig config = HttpCollectorConfigLoader.loadCollectorConfig(
    //    myXMLFile, myVariableFile);

    /* Java configuration: */
    FilesystemCollectorConfig config = new FilesystemCollectorConfig();
    config.setId("myid");
    config.setLogsDir("/tmp/logs/");
    ...
    
    FilesystemCollector collector = new FilesystemCollector(config);
    collector.crawl(true);

Refer to the [Filesystem Collector Javadoc](./apidocs/index.html) for more 
documentation or the [Configuration](./configuration.html) page for the 
XML configuration options.

<a name="Extend_the_Filesystem_Collector"></a>

$h2 Extend the Filesystem Collector

Setting up your environment to develop your own feature implementations
for your Filesystem Collector installation is relatively easy.
  
Maven users can easily add the necessary [pom.xml](./download.html) 
information to have all dependencies automatically resolved.  
  
For other developers or if you want to extend the Filesystem Collector with 
your local installation without downloading anything extra, create a new Java 
project in your favourite IDE. Add to your classpath all the files contained 
in the "lib"  folder of the Filesystem Collector installation.  
Configure your project to have its binary output directory to be the 
"classes" folder of your Filesystem Collector
installation. Automatically, code created and stored under "classes" will 
be picked up by the Filesystem Collector when run.


